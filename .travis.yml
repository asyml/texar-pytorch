sudo: required
language: python
dist: xenial  # Required for Python 3.7
cache: pip

python:
  - "3.6"
  - "3.7"

env:
  - TORCH_VER="1.0.1"
  - TORCH_VER="1.1.0"
  - TORCH_VER="1.2.0"
  - TORCH_VER="1.3.0"

matrix:
  fast_finish: true
  exclude:
    - python: "3.6"
      env: TORCH_VER="1.0.1"
    - python: "3.6"
      env: TORCH_VER="1.2.0"
    - python: "3.6"
      env: TORCH_VER="1.3.0"

install:
  - pip install --upgrade pip
  - pip install --progress-bar off torch==$TORCH_VER
  - pip install --progress-bar off .[extras]
  - if [[ $TORCH_VER == "1.3.0" ]]; then
      pip install pylint==2.3.1 flake8==3.7.7;
    fi
  - if [[ $TORCH_VER != "1.0.1" ]]; then
      pip install mypy==0.720;
    fi
  - pip install pytest
  - pip install coverage codecov

script:
  # Linting (only for PyTorch version 1.3.0 to save time)
  - if [[ $TORCH_VER == "1.3.0" ]]; then
      pylint texar/ examples/;
    fi
  - if [[ $TORCH_VER == "1.3.0" ]]; then
      flake8 texar/ examples/;
    fi
  # Type-checking (only for PyTorch version 1.1.0 & 1.2.0 & 1.3.0)
  - if [[ $TORCH_VER != "1.0.1" ]]; then
      mypy .;
    fi
  # Type-check all examples; fail if any example does not type-check
  # To understand it:
  # - Return code of for-loop is that of final command
  # - `mypy $dir || _rc=$?` stores return code if not 0
  # - `done && [[ $_rc == 0 ]];` returns 1 if for-loop returns zero and _rc is nonzero
  - if [[ $TORCH_VER != "1.0.1" ]]; then
      _rc=0;
      for dir in `echo examples/**/`; do
        mypy $dir || _rc=$?;
      done && [[ $_rc == 0 ]];
    fi
  # Unit tests
  - pytest
  # Test coverage
  - coverage run -m pytest

after_success:
  - codecov

jobs:
  include:
    - stage: docs
      python: "3.7"
      install:
        - pip install --upgrade pip
        - pip install --progress-bar off -r requirements.txt
        - pip install --progress-bar off .[extras]
        # Install library required for spellcheck
        - sudo apt-get install libenchant1c2a myspell-en-us
        - pip install --progress-bar off -r docs/requirements.txt
      script:
        - cd docs
        # Build documents
        - sphinx-build -W -b html -d _build/doctrees . _build/html
        # Check for typos
        - sphinx-build -W -b spelling -d _build/doctrees . _build/spelling

notifications:
  email: false
